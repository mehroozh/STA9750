---
title: "{{< var course.short >}} - Pre-Assignments"
---

```{r echo=FALSE, message=FALSE}
library(tidyverse)
DATES <- readr::read_csv("key_dates.csv") |>
    rename(element=`Course Element`,
           item=`Item Number`) |>
    mutate(dt = case_when(is.na(Time) ~ as.character(Date),
                          TRUE ~ paste(Date, "at", Time)))
```

In lieu of traditional homework, {{< var course.short >}} has weekly
**pre-assignments** designed to achieve several interlocking goals: 

1. Provide initial exposure to that week's topic before the lecture and lab session
2. Allow students with less previous programming experience more time to familiarize themselves with that week's topic
3. Allow students to submit questions to be covered in class

Each Pre-Assignment will be submitted via [CUNY Brightspace](https://brightspace.cuny.edu/)
and due the night before class (Wednesdays at 11:45). These are short assignments, 
typically only a few questions, so extensions will not be given outside of exceptional
circumstances. 

### Pre-Assignments

#### Pre-Assignment for Week #01

None.

#### Pre-Assignment for Week #02

```{r echo=FALSE}
pa <-  DATES |> filter(element == "Pre-Assignments", item == 2)
```

**Due Dates:**

  - Released to Students: `{r} pa |> filter(str_detect(Details, "Pre-Assignment Released")) |> pull(dt)`
  - **Due on Brightspace: `{r} pa |> filter(str_detect(Details, "Pre-Assignment Due")) |> pull(dt)`**

In [this Pre-Assignment](./preassigns/pa02.html), you will familiarize yourself
with the basics of `Markdown`, an easy way to write and format documents. In class,
we will use `Markdown` based tools to create dynamic data analysis documents
seamlessly combining code, text, and graphics. 

#### Pre-Assignment for Week #03
```{r echo=FALSE}
pa <-  DATES |> filter(element == "Pre-Assignments", item == 3)
```

**Due Dates:**

  - Released to Students: `{r} pa |> filter(str_detect(Details, "Pre-Assignment Released")) |> pull(dt)`
  - **Due on Brightspace: `{r} pa |> filter(str_detect(Details, "Pre-Assignment Due")) |> pull(dt)`**

In [this week's preassignment](./preassigns/pa03.html), you
will familiarize yourself with some basic "calculator math"
in `R`. You will also see how function calls work as we get
ready to start some proper `R` programming.

#### Pre-Assignment for Week #04

```{r echo=FALSE}
pa <-  DATES |> filter(element == "Pre-Assignments", item == 4)
```

**Due Dates:**

  - Released to Students: `{r} pa |> filter(str_detect(Details, "Pre-Assignment Released")) |> pull(dt)`
  - **Due on Brightspace: `{r} pa |> filter(str_detect(Details, "Pre-Assignment Due")) |> pull(dt)`**
  
In [this week's preassignment](./preassigns/pa04.html), you will review
`dplyr`'s "single-table" verbs. These are functions that take a _single_ data 
frame and do something, typically returning another data frame. We can divide
these into three major groups: 

- Subsetting rows (`filter`) and columns (`select`); 
- Changing and creating columns (`mutate` and less commonly, `rename`); 
- operating with group structure (`group_by`, `summarize`)


#### Pre-Assignment for Week #05

```{r echo=FALSE}
pa <-  DATES |> filter(element == "Pre-Assignments", item == 5)
```

**Due Dates:**

  - Released to Students: `{r} pa |> filter(str_detect(Details, "Pre-Assignment Released")) |> pull(dt)`
  - **Due on Brightspace: `{r} pa |> filter(str_detect(Details, "Pre-Assignment Due")) |> pull(dt)`**

In [this week's preassignment](./preassigns/pa05.html), you will review
`dplyr`'s most important "multi-table" verbs, the `join` operators. These are
functions that take _multiple_ data frames and combine them together. You will
need to use this type of functionality to combine data from different sources
together in a principled and organized fashion. You will also learn a bit
about the `pivot_longer` and `pivot_wider` functions used to change the
_shape_ of data frames. These are particularly useful in conjunction with 
joins: you will often need to reshape two tables to "join" properly
(typically, lengthening them with `pivot_longer`) and then reshape them
for downstream presentation (typically with `pivot_wider`). 

#### Pre-Assignment for Week #06

None. 

The 2024-10-10 class session will be dedicated to [Course Project Proposals](./project.html).

#### Pre-Assignment for Week #07

```{r echo=FALSE}
pa <-  DATES |> filter(element == "Pre-Assignments", item == 7)
```

**Due Dates:**

  - Released to Students: `{r} pa |> filter(str_detect(Details, "Pre-Assignment Released")) |> pull(dt)`
  - **Due on Brightspace: `{r} pa |> filter(str_detect(Details, "Pre-Assignment Due")) |> pull(dt)`**

In [this week's preassignment](./preassigns/pa07.html), we begin to explore
the wonderful world of _statistical graphics_.

#### Pre-Assignment for Week #08

```{r echo=FALSE}
pa <-  DATES |> filter(element == "Pre-Assignments", item == 8)
```

**Due Dates:**

  - Released to Students: `{r} pa |> filter(str_detect(Details, "Pre-Assignment Released")) |> pull(dt)`
  - **Due on Brightspace: `{r} pa |> filter(str_detect(Details, "Pre-Assignment Due")) |> pull(dt)`**

In [this week's preassignment](./preassigns/pa08.html), we dive deeper into
the world of statistical graphics, watching statistical graphics in the hands
of a master. 

#### Pre-Assignment for Week #09

```{r echo=FALSE}
pa <-  DATES |> filter(element == "Pre-Assignments", item == 9)
```

**Due Dates:**

  - Released to Students: `{r} pa |> filter(str_detect(Details, "Pre-Assignment Released")) |> pull(dt)`
  - **Due on Brightspace: `{r} pa |> filter(str_detect(Details, "Pre-Assignment Due")) |> pull(dt)`**
TBA

#### Pre-Assignment for Week #10

None. 

The 2024-11-07 class session will be dedicated to [Course Project Mid-Semester Check-Ins](./project.html).


#### Pre-Assignment for Week #11

```{r echo=FALSE}
pa <-  DATES |> filter(element == "Pre-Assignments", item == 11)
```

**Due Dates:**

  - Released to Students: `{r} pa |> filter(str_detect(Details, "Pre-Assignment Released")) |> pull(dt)`
  - **Due on Brightspace: `{r} pa |> filter(str_detect(Details, "Pre-Assignment Due")) |> pull(dt)`**
TBA

#### Pre-Assignment for Week #12

```{r echo=FALSE}
pa <-  DATES |> filter(element == "Pre-Assignments", item == 12)
```

**Due Dates:**

  - Released to Students: `{r} pa |> filter(str_detect(Details, "Pre-Assignment Released")) |> pull(dt)`
  - **Due on Brightspace: `{r} pa |> filter(str_detect(Details, "Pre-Assignment Due")) |> pull(dt)`**

TBA

#### Pre-Assignment for Week #13

```{r echo=FALSE}
pa <-  DATES |> filter(element == "Pre-Assignments", item == 13)
```

**Due Dates:**

  - Released to Students: `{r} pa |> filter(str_detect(Details, "Pre-Assignment Released")) |> pull(dt)`
  - **Due on Brightspace: `{r} pa |> filter(str_detect(Details, "Pre-Assignment Due")) |> pull(dt)`**

TBA

#### Pre-Assignment for Week #14

None. 

The 2024-12-12 class session will be dedicated to [Course Project Final Presentations](./project.html).
