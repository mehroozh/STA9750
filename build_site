#!/usr/bin/env Rscript
library(tidyverse)

## Auto-generate key dates file
system("soffice --convert-to csv key_dates.ods")

## Generate Google Calendar Formatted CSV for Student Events
DATES <- read_csv("key_dates.csv")

### i) First get lectures
LECTURES <- DATES |>
    filter(`Course Element` == "Class Session") |>
    mutate(Subject=paste("STA/OPR 9750 Lecture", `Item Number`),
           `Start Date`=Date,
           `Start Time`="6:05 PM",
           `End Date`=Date,
           `End Time`="9:00 PM",
           `All Day Event`="False",
           `Location`="Zoom [Link distributed via CUNY Brightspace]") |>
    select(-`Course Element`,
           -`Item Number`,
           -`Action`,
           -`Responsible Party`,
           -`Date`,
           -`Time`,
           -`Details`)

`%rep_na%` <- function(x, y) ifelse(is.na(x), y, x)

ASSIGNMENTS <- DATES |>
    filter(`Responsible Party` == "Student") |>
    mutate(Subject = paste0("STA/OPR 9750 ",
                           str_replace(`Course Element`, "s$", ""),
                           " ",
                           `Item Number` %rep_na% "",
                           ": ",
                           Details),
           Subject = str_replace(Subject, " :", ":"),
           dt = paste(Date, Time),
           end = parse_date_time(dt, "%Y-%m-%d %H:%M%p"),
           start = end - minutes(30),
           `Start Date`=as_date(start),
           `End Date`=as_date(end),
           `Start Time`=format(start, "%I:%M %p"),
           `End Time`=format(end, "%I:%M %p"),
           `All Day Event`="False",
           `Location`=case_when(
               `Course Element` == "Mini-Projects" ~ "Submitted via GitHub and Brightspace",
               `Course Element` == "Pre-Assignments" ~ "Submitted via Brightspace",
               str_detect(Details, "Team Roster Submission") ~ "Direct Submission to Instructor",
               str_detect(Details, "Presentation") ~ "In-Class Presentation",
               str_detect(Details, "Teammate Peer Evaluations") ~ "Submitted via Brightspace",
               str_detect(Details, "Report") ~ "Submitted via GitHub and Brightspace"
           )) |>
    select(-`Course Element`,
           -`Item Number`,
           -`Action`,
           -`Responsible Party`,
           -`Date`,
           -`Time`,
           -`Details`,
           -dt,
           -start,
           -end
           )

bind_rows(LECTURES, ASSIGNMENTS) |>
    arrange(`Start Date`) |>
    write_csv("key_dates_students_gcal.csv")

## Build site

if(!require("quarto")){
    install.packages("quarto")
}
library(quarto)
if(!quarto::quarto_binary_sitrep()){
    stop("Something is wrong with your quarto installation.")
}
quarto::quarto_render(".")

# Process navbar in archive folders
cat("Adapting Archive Navbars")
ARCHIVE_HTML_FILES <- list.files("docs/archive/",
                                 recursive = TRUE,
                                 pattern="*html",
                                 full.names=TRUE)

library(rvest)
for(fname in ARCHIVE_HTML_FILES){
    html_old <- readLines(fname)
    html_links_old <- rvest::read_html(fname) |>
        html_element(".navbar") |>
        html_elements("a") |>
        html_attr("href")

    html_new <- html_old

    for(html_link_old in html_links_old){
        html_link_new <- str_replace_all(html_link_old,
                                         fixed("../../"),
                                         "./")
        html_new <- str_replace_all(html_new,
                                    html_link_old,
                                    html_link_new)
    }

    writeLines(html_new, fname)
}

knitr::purl("tips.qmd",
            documentation=0L,
            output="docs/load_helpers.R")

system("git add docs/*")


if(!any(grepl("rstudio", search()))){q("no")}
